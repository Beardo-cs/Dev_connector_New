{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import Spinner from\"../layout/Spinner\";import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';import{getProfileById}from'../../actions/profile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(_ref){var getProfileById=_ref.getProfileById,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading,auth=_ref.auth,match=_ref.match;useEffect(function(){getProfileById(match.params.id);},[getProfileById]);return/*#__PURE__*/_jsx(Fragment,{children:profile===null||loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/profiles\",className:\"btn btn-light\",children:\"Back To Profiles\"}),auth.isAuthenticated&&auth.loading===false&&auth.user._id===profile.user._id&&/*#__PURE__*/_jsx(Link,{to:\"/edit-profile\",className:\"btn btn-dark\",children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,{profile:profile}),/*#__PURE__*/_jsx(ProfileAbout,{profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-exp bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Experience\"}),profile.experience.length>0?/*#__PURE__*/_jsxs(Fragment,{children:[profile.experience.map(function(experience){return/*#__PURE__*/_jsx(ProfileExperience,{experience:experience},experience._id);}),\" \"]}):/*#__PURE__*/_jsx(\"h4\",{children:\" No experience credentials \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-edu bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Education\"}),profile.education.length>0?/*#__PURE__*/_jsxs(Fragment,{children:[profile.education.map(function(education){return/*#__PURE__*/_jsx(ProfileEducation,{education:education},education._id);}),\" \"]}):/*#__PURE__*/_jsx(\"h4\",{children:\" No education credentials \"})]}),profile.githubusername&&/*#__PURE__*/_jsx(ProfileGithub,{username:profile.githubusername})]})]})});};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,auth:state.auth};};export default connect(mapStateToProps,{getProfileById:getProfileById})(Profile);","map":{"version":3,"sources":["/home/mahi/Downloads/social_media/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,cAAR,KAA6B,uBAA7B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,MAKT,IAJFD,CAAAA,cAIE,MAJFA,cAIE,mBAHFE,OAGE,CAHQA,OAGR,cAHQA,OAGR,CAHiBC,OAGjB,cAHiBA,OAGjB,CAFFC,IAEE,MAFFA,IAEE,CADFC,KACE,MADFA,KACE,CACFd,SAAS,CAAC,UAAM,CACZS,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd,CACH,CAFQ,CAEN,CAACP,cAAD,CAFM,CAAT,CAIA,mBACA,KAAC,QAAD,WACCE,OAAO,GAAK,IAAZ,EAAoBC,OAApB,cACG,KAAC,OAAD,IADH,cAGG,MAAC,QAAD,yBACA,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,CAAqB,SAAS,CAAC,eAA/B,8BADA,CAICC,IAAI,CAACI,eAAL,EACGJ,IAAI,CAACD,OAAL,GAAiB,KADpB,EAEGC,IAAI,CAACK,IAAL,CAAUC,GAAV,GAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFlC,eAGG,KAAC,IAAD,EAAM,EAAE,CAAE,eAAV,CAA0B,SAAS,CAAE,cAArC,0BAPJ,cAYI,aAAK,KAAK,CAAC,mBAAX,wBACI,KAAC,UAAD,EAAY,OAAO,CAAER,OAArB,EADJ,cAEI,KAAC,YAAD,EAAc,OAAO,CAAEA,OAAvB,EAFJ,cAGI,aAAK,SAAS,CAAC,0BAAf,wBACQ,WAAI,SAAS,CAAC,cAAd,wBADR,CAESA,OAAO,CAACS,UAAR,CAAmBC,MAAnB,CAA4B,CAA5B,cACG,MAAC,QAAD,YACEV,OAAO,CAACS,UAAR,CAAmBE,GAAnB,CAAuB,SAAAF,UAAU,qBACnC,KAAC,iBAAD,EAEA,UAAU,CAAEA,UAFZ,EACKA,UAAU,CAACD,GADhB,CADmC,EAAjC,CADF,OADH,cASG,mDAXZ,GAHJ,cAiBQ,aAAK,SAAS,CAAC,0BAAf,wBACA,WAAI,SAAS,CAAC,cAAd,uBADA,CAECR,OAAO,CAACY,SAAR,CAAkBF,MAAlB,CAA2B,CAA3B,cACG,MAAC,QAAD,YACEV,OAAO,CAACY,SAAR,CAAkBD,GAAlB,CAAsB,SAAAC,SAAS,qBACjC,KAAC,gBAAD,EAEA,SAAS,CAAEA,SAFX,EACKA,SAAS,CAACJ,GADf,CADiC,EAA/B,CADF,OADH,cASG,kDAXJ,GAjBR,CAgCKR,OAAO,CAACa,cAAR,eACG,KAAC,aAAD,EAAe,QAAQ,CAAGb,OAAO,CAACa,cAAlC,EAjCR,GAZJ,GAJJ,EADA,CAyDH,CAnED,CA2EA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9Bf,OAAO,CAAEe,KAAK,CAACf,OADe,CAE9BE,IAAI,CAAEa,KAAK,CAACb,IAFkB,CAAL,EAA7B,CAIA,cAAeX,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CAAChB,cAAc,CAAdA,cAAD,CAAlB,CAAP,CAA4CC,OAA5C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport{ getProfileById} from '../../actions/profile';\n\nconst Profile =({ \n    getProfileById, \n    profile: {profile, loading}, \n    auth, \n    match\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById]);\n\n    return (\n    <Fragment>\n    {profile === null || loading ? (\n        <Spinner/> \n    ) : (\n        <Fragment>\n        <Link to='/profiles' className='btn btn-light'>\n        Back To Profiles\n        </Link>\n        {auth.isAuthenticated && \n            auth.loading === false && \n            auth.user._id === profile.user._id && (\n            <Link to ='/edit-profile' className ='btn btn-dark'>\n                Edit Profile\n            </Link>\n            )}\n            \n            <div class=\"profile-grid my-1\">\n                <ProfileTop profile={profile} />\n                <ProfileAbout profile={profile} />\n                <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experience.length > 0 ? (\n                            <Fragment> \n                            { profile.experience.map(experience => (\n                            <ProfileExperience \n                            key={experience._id} \n                            experience={experience}\n                             />\n                            ))} </Fragment>\n                        ) : (\n                            <h4> No experience credentials </h4>\n                            )} \n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n                    <h2 className=\"text-primary\">Education</h2>\n                    {profile.education.length > 0 ? (\n                        <Fragment> \n                        { profile.education.map(education => (\n                        <ProfileEducation \n                        key={education._id} \n                        education={education} \n                        />\n                        ))} </Fragment>\n                    ) : (\n                        <h4> No education credentials </h4>\n                        )} \n                </div>\n\n                {profile.githubusername && (\n                    <ProfileGithub username={ profile.githubusername } />\n                )}\n            </div>\n        </Fragment> \n    )}\n    </Fragment>\n    );\n};\n\nProfile.propTypes ={\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\nexport default connect(mapStateToProps, {getProfileById}) (Profile);"]},"metadata":{},"sourceType":"module"}